@using AppointmentData.Models;
@model List<SlotModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar with Slots</title>
    <link href="~/css/main.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
    <style>
        .slot-button {
            margin-right: 10px;
            width: calc(25% - 10px);
        }
    </style>
</head>
<body>
    <div id="calendar" data-service-id="@Model.FirstOrDefault()?.ServiceID" data-service-provider-id="@Model.FirstOrDefault()?.ServiceProviderID"></div>

    <div class="modal fade" id="slotModal" tabindex="-1" role="dialog" aria-labelledby="slotModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="slotModalLabel">Available Slots</h5>
                    
                </div>
                <div class="modal-body" id="slotModalBody"></div>
                <div class="modal-footer">
                    
                    <button type="button" id="closeButton" class="close" data-dismiss="modal" aria-label="Close">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var serviceId = calendarEl.dataset.serviceId;
            var serviceProviderId = calendarEl.dataset.serviceProviderId;

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                dateClick: function (info) {
                    fetchAppointments(info.date); 
                },
                validRange: {
                    start: moment().format('YYYY-MM-DD') 
                }
            });
            calendar.render();

            $(document).ready(function () {
                $('#closeButton').click(function () {
                    $('#slotModal').modal('hide');
                });
            });

        
            function fetchAppointments(date) {
                date = moment(date); 
                $.ajax({
                    url: '/Appointment/GetAppointments',
                    method: 'GET',
                    data: {
                        date: date.format('YYYY-MM-DD'),
                        serviceId: serviceId,
                        serviceProviderId: serviceProviderId
                    },
                    success: function (response) {
                        var appointmentTimes = response.appointmentTimes;
                        generateSlots(date, appointmentTimes); 
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching appointments:', error);
                    }
                });
            }

            function generateSlots(date, appointmentTimes) {
                var modalBody = $('#slotModalBody');
                modalBody.empty();

                @foreach (var slotModel in Model)
                {
                    <text>
                    var startTime = moment('@slotModel.StartTime', 'HH:mm');
                    var endTime = moment('@slotModel.EndTime', 'HH:mm');
                    var duration = @slotModel.Duration;

                    var slots = [];
                    var currentTime = moment(startTime);
                    while (currentTime.isBefore(endTime)) {
                        var slotEndTime = moment(currentTime).add(duration, 'minutes');
                        var isBooked = isSlotBooked(currentTime, slotEndTime, appointmentTimes);
                        slots.push({
                            startTime: moment(currentTime),
                            endTime: slotEndTime,
                            isBooked: isBooked
                        });
                        currentTime.add(duration, 'minutes');
                    }

                    displaySlots(slots, date);
                    </text>
                }
            }

            function displaySlots(slots, date) {
                var modalBody = $('#slotModalBody');

                slots.forEach(function (slot) {
                    var button = $('<button>').text(slot.startTime.format('h:mm A')).addClass('slot-button btn mt-3');
                    if (slot.isBooked) {
                        button.addClass('btn-danger disabled'); 
                    } else {
                        button.addClass('btn-success'); 
                        button.click(function () {
                            confirmAppointment(slot.startTime, serviceId, serviceProviderId, date);
                        });
                    }
                    modalBody.append(button);
                });

                $('#slotModal').modal('show');
            }
            
            function isSlotBooked(slotStartTime, slotEndTime, appointmentTimes) {
                for (var i = 0; i < appointmentTimes.length; i++) {
                    var appointmentTime = moment(appointmentTimes[i], 'HH:mm');
                    if (slotStartTime.isSameOrBefore(appointmentTime) && slotEndTime.isAfter(appointmentTime)) {
                        return true;
                    }
                }
                return false;
            }

            function confirmAppointment(startTime, serviceId, serviceProviderId, date) {
                var appointmentDate = moment(date).format('YYYY-MM-DD');
                var appointmentTime = startTime.format('HH:mm');
                var url = '/Appointment/ConfirmAppointment?date=' + appointmentDate + '&time=' + appointmentTime + '&serviceId=' + serviceId + '&serviceProviderId=' + serviceProviderId;
                window.location.href = url;
            }
        });
    </script>
</body>
</html>
